# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1_t', 'name')`} {
	public:
		$1 (${2:arguments});
		virtual ~$1 ();
	
	private:
		${3:/* data */}
	};

#Coplien
snippet canon
	#ifndef 	${1:`Filename('$1', 'name')`}_H_
	# define 	$1_H_

	class	$1 
	{
	public:
	  $1(${2:arguments});
	  $1(const $1& src);
	
	  virtual ~$1(void);

	  $1&		operator=(const $1& src);

	private:
	  ${3:/* data */}
	};

	#endif		/* $1_H_ */
snippet copl
	#include "${1:`Filename('$1', 'name')`}.h"

	$1::$1(${2:arguments})
	{}

	$1::$1(const $1& src)
	{}

	$1::~$1(void)
	{}

	$1&		$1::operator=(const $1& src)
	{}
snippet oncepp
	#ifndef 	${1:`Filename('$1', 'name')`}_H_
	# define 	$1_H_

	${3:/*content*}

	#endif		/* $1_H_ */
